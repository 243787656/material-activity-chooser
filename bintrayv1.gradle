apply plugin: 'com.jfrog.bintray'

version = libraryVersion

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']

    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying

    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            released  = new Date()
        }
    }
}

/**
 * Delete default debug and release AARs and use the renamed one.
 */
task prepareForUpload(type: Delete) {
    delete fileTree(dir: "${project.buildDir}/outputs/aar", exclude: "material-activity-chooser-${libraryVersion}.aar")

    doLast {
        artifacts {
            archives file("${project.buildDir}/outputs/aar/material-activity-chooser-${libraryVersion}.aar")
        }
    }
}

tasks['bintrayUpload'].dependsOn prepareForUpload